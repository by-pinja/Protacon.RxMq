trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  isTagBuild: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/')]

steps:
- task: PowerShell@2
  inputs:
    targetType: 'filePath'
    filePath: '$(Build.SourcesDirectory)/Build.ps1'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Pack Abstractions library'
  condition: and(succeeded(), eq(variables['isTagBuild'], true))
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)/Protacon.RxMq.Abstractions/Protacon.RxMq.Abstractions.csproj'
    outputDir: '$(Build.ArtifactStagingDirectory)/Protacon.RxMq.Abstractions'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'BUILD_SOURCEBRANCHNAME'

- task: DotNetCoreCLI@2
  displayName: 'Pack Legacy library'
  condition: and(succeeded(), eq(variables['isTagBuild'], true))
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)/Protacon.RxMq.AzureServiceBusLegacy/Protacon.RxMq.AzureServiceBusLegacy.csproj'
    outputDir: '$(Build.ArtifactStagingDirectory)/Protacon.RxMq.AzureServiceBusLegacy'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'BUILD_SOURCEBRANCHNAME'

- task: DotNetCoreCLI@2
  displayName: 'Pack Modern library'
  condition: and(succeeded(), eq(variables['isTagBuild'], true))
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)/Protacon.RxMq.AzureServiceBus/Protacon.RxMq.AzureServiceBus.csproj'
    outputDir: '$(Build.ArtifactStagingDirectory)/Protacon.RxMq.AzureServiceBus'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'BUILD_SOURCEBRANCHNAME'
